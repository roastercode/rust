{"message":"this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021","code":{"code":"array_into_iter","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":921,"byte_end":930,"line_start":28,"line_end":28,"column_start":47,"column_end":56,"is_primary":true,"text":[{"text":"    println!(\"Find 2 in array2: {:?}\", array2.into_iter().find(|&&x| x == 2));","highlight_start":47,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(array_into_iter)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this changes meaning in Rust 2021","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `.iter()` instead of `.into_iter()` to avoid ambiguity","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":921,"byte_end":930,"line_start":28,"line_end":28,"column_start":47,"column_end":56,"is_primary":true,"text":[{"text":"    println!(\"Find 2 in array2: {:?}\", array2.into_iter().find(|&&x| x == 2));","highlight_start":47,"highlight_end":56}],"label":null,"suggested_replacement":"iter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":914,"byte_end":914,"line_start":28,"line_end":28,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"    println!(\"Find 2 in array2: {:?}\", array2.into_iter().find(|&&x| x == 2));","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"IntoIterator::into_iter(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":920,"byte_end":932,"line_start":28,"line_end":28,"column_start":46,"column_end":58,"is_primary":true,"text":[{"text":"    println!(\"Find 2 in array2: {:?}\", array2.into_iter().find(|&&x| x == 2));","highlight_start":46,"highlight_end":58}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this method call resolves to `<&[T; N] as IntoIterator>::into_iter` (due to backwards compatibility), but will resolve to <[T; N] as IntoIterator>::into_iter in Rust 2021\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Find 2 in array2: {:?}\", array2.into_iter().find(|&&x| x == 2));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(array_into_iter)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this changes meaning in Rust 2021\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/IntoIterator-for-arrays.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `.iter()` instead of `.into_iter()` to avoid ambiguity\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    println!(\"Find 2 in array2: {:?}\", array2.\u001b[0m\u001b[0m\u001b[38;5;10miter\u001b[0m\u001b[0m().find(|&&x| x == 2));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: or use `IntoIterator::into_iter(..)` instead of `.into_iter()` to explicitly iterate by value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    println!(\"Find 2 in array2: {:?}\", \u001b[0m\u001b[0m\u001b[38;5;10mIntoIterator::into_iter(\u001b[0m\u001b[0marray2\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m.find(|&&x| x == 2));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
